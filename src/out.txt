/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_bool_find_index_of(const GupArrayBool *xs, bool x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_char_find_index_of(const GupArrayChar *xs, char x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_double_find_index_of(const GupArrayDouble *xs, double x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_float_find_index_of(const GupArrayFloat *xs, float x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_int_find_index_of(const GupArrayInt *xs, int x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_long_find_index_of(const GupArrayLong *xs, long x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_ptr_find_index_of(const GupArrayPtr *xs, void* x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_short_find_index_of(const GupArrayShort *xs, short x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_string_find_index_of(const GupArrayString *xs, GupString x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

/**
 * @return zero-indexed index of the element, -1 if not found.
 */
void gup_array_cstr_find_index_of(const GupArrayCstr *xs, char* x) {
  for (int i = 0; i < xs->count; i++) {
      if (xs->data[i] == x) {
          return i;
      }
  }

  return -1;
}

