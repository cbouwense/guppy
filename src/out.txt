GupSetChar gup_set_char_create() {
    GupSetChar xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(char)),
    };
    return xs;
}

GupSetChar gup_set_char_create_arena(GupArena *a) {
    GupSetChar xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(char)),
    };
    return xs;
}

GupSetDouble gup_set_double_create() {
    GupSetDouble xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(double)),
    };
    return xs;
}

GupSetDouble gup_set_double_create_arena(GupArena *a) {
    GupSetDouble xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(double)),
    };
    return xs;
}

GupSetFloat gup_set_float_create() {
    GupSetFloat xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(float)),
    };
    return xs;
}

GupSetFloat gup_set_float_create_arena(GupArena *a) {
    GupSetFloat xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(float)),
    };
    return xs;
}

GupSetInt gup_set_int_create() {
    GupSetInt xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(int)),
    };
    return xs;
}

GupSetInt gup_set_int_create_arena(GupArena *a) {
    GupSetInt xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(int)),
    };
    return xs;
}

GupSetLong gup_set_long_create() {
    GupSetLong xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(long)),
    };
    return xs;
}

GupSetLong gup_set_long_create_arena(GupArena *a) {
    GupSetLong xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(long)),
    };
    return xs;
}

GupSetPtr gup_set_ptr_create() {
    GupSetPtr xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(void*)),
    };
    return xs;
}

GupSetPtr gup_set_ptr_create_arena(GupArena *a) {
    GupSetPtr xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(void*)),
    };
    return xs;
}

GupSetShort gup_set_short_create() {
    GupSetShort xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(short)),
    };
    return xs;
}

GupSetShort gup_set_short_create_arena(GupArena *a) {
    GupSetShort xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(short)),
    };
    return xs;
}

GupSetString gup_set_string_create() {
    GupSetString xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(GupString)),
    };
    return xs;
}

GupSetString gup_set_string_create_arena(GupArena *a) {
    GupSetString xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(GupString)),
    };
    return xs;
}

GupSetString gup_set_string_create() {
    GupSetString xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(char*)),
    };
    return xs;
}

GupSetString gup_set_string_create_arena(GupArena *a) {
    GupSetString xs = {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = gup_arena_alloc(a, GUP_SET_DEFAULT_CAPACITY * sizeof(char*)),
    };
    return xs;
}

