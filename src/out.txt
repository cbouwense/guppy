GupSet gup_set_long_create() {
    GupSet xs = (GupSet) {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(GupSetData)),
    };

    for (int i = 0; i < xs.capacity; i++) {
        xs.data[i].occupied = false;
    }

    return xs;
}

GupSet gup_set_ptr_create() {
    GupSet xs = (GupSet) {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(GupSetData)),
    };

    for (int i = 0; i < xs.capacity; i++) {
        xs.data[i].occupied = false;
    }

    return xs;
}

GupSet gup_set_short_create() {
    GupSet xs = (GupSet) {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(GupSetData)),
    };

    for (int i = 0; i < xs.capacity; i++) {
        xs.data[i].occupied = false;
    }

    return xs;
}

GupSet gup_set_string_create() {
    GupSet xs = (GupSet) {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(GupSetData)),
    };

    for (int i = 0; i < xs.capacity; i++) {
        xs.data[i].occupied = false;
    }

    return xs;
}

GupSet gup_set_cstr_create() {
    GupSet xs = (GupSet) {
        .capacity = GUP_SET_DEFAULT_CAPACITY,
        .count = 0,
        .data = malloc(GUP_SET_DEFAULT_CAPACITY * sizeof(GupSetData)),
    };

    for (int i = 0; i < xs.capacity; i++) {
        xs.data[i].occupied = false;
    }

    return xs;
}

